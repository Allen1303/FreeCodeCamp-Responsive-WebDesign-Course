@import url(https://fonts.googleapis.com/css?family=Montserrat:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic);

html {
  box-sizing: border-box;
}
body {
  font-family: sans-serif;
  color: #0a0a23;
}
span[class~="sr-only"] {
  border: 0 !important;
  width: 1px !important;
  height: 1px !important;
  overflow: hidden !important;
  white-space: nowrap !important;
  position: absolute !important;
  padding: 0 !important;
  margin: -1px !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  clip-path: inset(50%) !important;
}
h1 {
  max-width: 37.25rem;
  margin: 0 auto;
  padding: 1.5rem 1.25rem;
}
h1 .flex {
  display: flex;
  flex-direction: column-reverse;
  gap: 1rem;
}
/* The :first-of-type pseudo-selector is used to target the first element that matches the selector. */
h1 .flex span:first-of-type {
  font-size: 0.7em;
}
/* The :last-of-type pseudo-selector does the exact opposite - it targets the last element that matches the selector.*/
h1 .flex span:last-of-type {
  font-size: 1.2em;
}
section {
  max-width: 40rem;
  margin: 0 auto;
  border: 2px solid #d0d0d5;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Add box shadow */
}
/* This block of CSS code positions the element with the ID "years" at the top of the viewport and makes it sticky. It also aligns the content inside the element to the right using flexbox. */
#years {
  display: flex;
  justify-content: flex-end;
  position: sticky;
  top: 0;
  color: #fff;
  background: #0a0a23;
  margin: 0 -2px;
  padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;
  z-index: 999;
}
#years span[class] {
  font-weight: bold;
  width: 4.5rem;
  text-align: right;
}
.table-wrap {
  padding: 0 0.75rem 1.5rem 0.75rem;
}
/* The :not() pseudo-selector is used to target all elements that do not match the selector */

table {
  border-collapse: collapse;
  border: 0;
  width: 100%;
  position: relative;
  margin-top: 3rem;
}
table caption {
  color: #356eaf;
  font-size: 1.3em;
  font-weight: normal;
}
caption {
  position: absolute;
  top: -2.25rem;
  left: 0.5rem;
}
/* This approach ensures that the width is fixed, whereas setting width specifically would allow the elements to shrink to the container. */
tbody td {
  width: 100vw;
  min-width: 4rem;
  max-width: 4rem;
}
tbody th {
  width: calc(100% - 12rem);
}

/* The [attribute="value"] selector targets any element that has an attribute with a specific value. */
tr[class="total"] {
  border-bottom: 4px double #0a0a23;
  font-weight: bold;
}
tr[class="total"] th {
  text-align: left;
  padding: 0.5rem 0 0.25rem 0.5rem;
}
tr.total td {
  text-align: right;
  padding: 0 0.25rem;
}
/* The :nth-of-type() pseudo-selector is used to target specific elements based on their order among siblings of the same type. */
tr.total td:nth-of-type(3) {
  padding-right: 0.5rem;
}
tr.total:hover {
  background: #99c9ff;
}
td.current {
  font-style: italic;
}
tr.data {
  background-image: linear-gradient(#dfdfe2 1.845rem, white 1.845rem);
}
tr.data th {
  text-align: left;
  padding-top: 0.3rem;
  padding-left: 0.5rem;
}
tr .data th .description {
  display: block;
  font-style: italic;
  font-weight: normal;
  padding: 1rem 0 0.75rem;
  margin-right: 13.5rem;
}
tr.data th .description {
  display: block;
  font-style: italic;
  font-weight: normal;
  padding: 1rem 0 0.75rem;
  margin-right: -13.5rem;
}
tr.data td {
  vertical-align: top;
  text-align: right;
  padding: 0.3rem 0.25rem 0;
}
tr.data td:last-of-type {
  padding: 0.5rem;
}
/*/////////////////////////////////////////////////*/
/* Media Query Styling for Better Responsiveness */
@media only screen and (max-width: 768px) {
  h1 .flex {
    flex-direction: column;
  }
}

@media only screen and (max-width: 600px) {
  tbody td,
  tbody th {
    min-width: auto;
    max-width: none;
  }

  tr[class="total"] th {
    padding-left: 0.25rem;
  }
}
